/*
 * This file is generated by jOOQ.
 */
package com.ke.bella.workflow.db.tables;


import com.ke.bella.workflow.db.DefaultSchema;
import com.ke.bella.workflow.db.Indexes;
import com.ke.bella.workflow.db.Keys;
import com.ke.bella.workflow.db.tables.records.WorkflowAggregateRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row17;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WorkflowAggregate extends TableImpl<WorkflowAggregateRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>workflow_aggregate</code>
     */
    public static final WorkflowAggregate WORKFLOW_AGGREGATE = new WorkflowAggregate();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<WorkflowAggregateRecord> getRecordType() {
        return WorkflowAggregateRecord.class;
    }

    /**
     * The column <code>workflow_aggregate.id</code>. workflow配置自增主键
     */
    public final TableField<WorkflowAggregateRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "workflow配置自增主键");

    /**
     * The column <code>workflow_aggregate.tenant_id</code>. 租户id
     */
    public final TableField<WorkflowAggregateRecord, String> TENANT_ID = createField(DSL.name("tenant_id"), SQLDataType.VARCHAR(64).nullable(false), this, "租户id");

    /**
     * The column <code>workflow_aggregate.workflow_id</code>.
     */
    public final TableField<WorkflowAggregateRecord, String> WORKFLOW_ID = createField(DSL.name("workflow_id"), SQLDataType.VARCHAR(128).nullable(false), this, "");

    /**
     * The column <code>workflow_aggregate.title</code>.
     */
    public final TableField<WorkflowAggregateRecord, String> TITLE = createField(DSL.name("title"), SQLDataType.VARCHAR(255).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>workflow_aggregate.mode</code>.
     */
    public final TableField<WorkflowAggregateRecord, String> MODE = createField(DSL.name("mode"), SQLDataType.VARCHAR(64).nullable(false).defaultValue(DSL.inline("workflow", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>workflow_aggregate.desc</code>.
     */
    public final TableField<WorkflowAggregateRecord, String> DESC = createField(DSL.name("desc"), SQLDataType.VARCHAR(1024).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>workflow_aggregate.graph</code>. 工作流DAG配置
     */
    public final TableField<WorkflowAggregateRecord, String> GRAPH = createField(DSL.name("graph"), SQLDataType.CLOB.nullable(false), this, "工作流DAG配置");

    /**
     * The column <code>workflow_aggregate.version</code>. 工作流版本，0: draft, &gt;0 正式版时间戳
     */
    public final TableField<WorkflowAggregateRecord, Long> VERSION = createField(DSL.name("version"), SQLDataType.BIGINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.BIGINT)), this, "工作流版本，0: draft, >0 正式版时间戳");

    /**
     * The column <code>workflow_aggregate.latest_publish_version</code>. 工作流最新发布版本，0: draft, &gt;0 正式版时间戳
     */
    public final TableField<WorkflowAggregateRecord, Long> LATEST_PUBLISH_VERSION = createField(DSL.name("latest_publish_version"), SQLDataType.BIGINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.BIGINT)), this, "工作流最新发布版本，0: draft, >0 正式版时间戳");

    /**
     * The column <code>workflow_aggregate.default_publish_version</code>. 默认生效版本号 -1 使用最新 
     */
    public final TableField<WorkflowAggregateRecord, Long> DEFAULT_PUBLISH_VERSION = createField(DSL.name("default_publish_version"), SQLDataType.BIGINT.nullable(false).defaultValue(DSL.inline("-1", SQLDataType.BIGINT)), this, "默认生效版本号 -1 使用最新 ");

    /**
     * The column <code>workflow_aggregate.status</code>. 状态（0:正常, -1:已删除）
     */
    public final TableField<WorkflowAggregateRecord, Integer> STATUS = createField(DSL.name("status"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "状态（0:正常, -1:已删除）");

    /**
     * The column <code>workflow_aggregate.cuid</code>.
     */
    public final TableField<WorkflowAggregateRecord, Long> CUID = createField(DSL.name("cuid"), SQLDataType.BIGINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>workflow_aggregate.cu_name</code>.
     */
    public final TableField<WorkflowAggregateRecord, String> CU_NAME = createField(DSL.name("cu_name"), SQLDataType.VARCHAR(32).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>workflow_aggregate.ctime</code>.
     */
    public final TableField<WorkflowAggregateRecord, LocalDateTime> CTIME = createField(DSL.name("ctime"), SQLDataType.LOCALDATETIME(0).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>workflow_aggregate.muid</code>.
     */
    public final TableField<WorkflowAggregateRecord, Long> MUID = createField(DSL.name("muid"), SQLDataType.BIGINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>workflow_aggregate.mu_name</code>.
     */
    public final TableField<WorkflowAggregateRecord, String> MU_NAME = createField(DSL.name("mu_name"), SQLDataType.VARCHAR(32).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>workflow_aggregate.mtime</code>.
     */
    public final TableField<WorkflowAggregateRecord, LocalDateTime> MTIME = createField(DSL.name("mtime"), SQLDataType.LOCALDATETIME(0).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "");

    private WorkflowAggregate(Name alias, Table<WorkflowAggregateRecord> aliased) {
        this(alias, aliased, null);
    }

    private WorkflowAggregate(Name alias, Table<WorkflowAggregateRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>workflow_aggregate</code> table reference
     */
    public WorkflowAggregate(String alias) {
        this(DSL.name(alias), WORKFLOW_AGGREGATE);
    }

    /**
     * Create an aliased <code>workflow_aggregate</code> table reference
     */
    public WorkflowAggregate(Name alias) {
        this(alias, WORKFLOW_AGGREGATE);
    }

    /**
     * Create a <code>workflow_aggregate</code> table reference
     */
    public WorkflowAggregate() {
        this(DSL.name("workflow_aggregate"), null);
    }

    public <O extends Record> WorkflowAggregate(Table<O> child, ForeignKey<O, WorkflowAggregateRecord> key) {
        super(child, key, WORKFLOW_AGGREGATE);
    }

    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.WORKFLOW_AGGREGATE_IDX_CUID_TIME);
    }

    @Override
    public Identity<WorkflowAggregateRecord, Long> getIdentity() {
        return (Identity<WorkflowAggregateRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<WorkflowAggregateRecord> getPrimaryKey() {
        return Keys.KEY_WORKFLOW_AGGREGATE_PRIMARY;
    }

    @Override
    public List<UniqueKey<WorkflowAggregateRecord>> getKeys() {
        return Arrays.<UniqueKey<WorkflowAggregateRecord>>asList(Keys.KEY_WORKFLOW_AGGREGATE_PRIMARY, Keys.KEY_WORKFLOW_AGGREGATE_IDX_TENANT_ID);
    }

    @Override
    public WorkflowAggregate as(String alias) {
        return new WorkflowAggregate(DSL.name(alias), this);
    }

    @Override
    public WorkflowAggregate as(Name alias) {
        return new WorkflowAggregate(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public WorkflowAggregate rename(String name) {
        return new WorkflowAggregate(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public WorkflowAggregate rename(Name name) {
        return new WorkflowAggregate(name, null);
    }

    // -------------------------------------------------------------------------
    // Row17 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row17<Long, String, String, String, String, String, String, Long, Long, Long, Integer, Long, String, LocalDateTime, Long, String, LocalDateTime> fieldsRow() {
        return (Row17) super.fieldsRow();
    }
}
