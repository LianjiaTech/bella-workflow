/*
 * This file is generated by jOOQ.
 */
package com.ke.bella.workflow.db.tables.records;


import com.ke.bella.workflow.db.repo.Operator;
import com.ke.bella.workflow.db.tables.WorkflowRunSharding;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WorkflowRunShardingRecord extends UpdatableRecordImpl<WorkflowRunShardingRecord> implements Operator, Record11<Long, String, LocalDateTime, Long, Long, LocalDateTime, String, Long, LocalDateTime, String, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>workflow_run_sharding.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>workflow_run_sharding.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>workflow_run_sharding.key</code>. 分表的标识，
对应的表+’_’+key即是实际读写的表
     */
    public void setKey(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>workflow_run_sharding.key</code>. 分表的标识，
对应的表+’_’+key即是实际读写的表
     */
    public String getKey() {
        return (String) get(1);
    }

    /**
     * Setter for <code>workflow_run_sharding.key_time</code>.
     */
    public void setKeyTime(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>workflow_run_sharding.key_time</code>.
     */
    public LocalDateTime getKeyTime() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>workflow_run_sharding.count</code>. 分表的记录数量
     */
    public void setCount(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>workflow_run_sharding.count</code>. 分表的记录数量
     */
    public Long getCount() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>workflow_run_sharding.max_count</code>. 分表的最大记录数
如果count&gt;max_count， 创建新表
     */
    public void setMaxCount(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>workflow_run_sharding.max_count</code>. 分表的最大记录数
如果count&gt;max_count， 创建新表
     */
    public Long getMaxCount() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>workflow_run_sharding.ctime</code>.
     */
    public void setCtime(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>workflow_run_sharding.ctime</code>.
     */
    public LocalDateTime getCtime() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>workflow_run_sharding.cu_name</code>.
     */
    public void setCuName(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>workflow_run_sharding.cu_name</code>.
     */
    public String getCuName() {
        return (String) get(6);
    }

    /**
     * Setter for <code>workflow_run_sharding.cuid</code>.
     */
    public void setCuid(Long value) {
        set(7, value);
    }

    /**
     * Getter for <code>workflow_run_sharding.cuid</code>.
     */
    public Long getCuid() {
        return (Long) get(7);
    }

    /**
     * Setter for <code>workflow_run_sharding.mtime</code>.
     */
    public void setMtime(LocalDateTime value) {
        set(8, value);
    }

    /**
     * Getter for <code>workflow_run_sharding.mtime</code>.
     */
    public LocalDateTime getMtime() {
        return (LocalDateTime) get(8);
    }

    /**
     * Setter for <code>workflow_run_sharding.mu_name</code>.
     */
    public void setMuName(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>workflow_run_sharding.mu_name</code>.
     */
    public String getMuName() {
        return (String) get(9);
    }

    /**
     * Setter for <code>workflow_run_sharding.muid</code>.
     */
    public void setMuid(Long value) {
        set(10, value);
    }

    /**
     * Getter for <code>workflow_run_sharding.muid</code>.
     */
    public Long getMuid() {
        return (Long) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row11<Long, String, LocalDateTime, Long, Long, LocalDateTime, String, Long, LocalDateTime, String, Long> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    @Override
    public Row11<Long, String, LocalDateTime, Long, Long, LocalDateTime, String, Long, LocalDateTime, String, Long> valuesRow() {
        return (Row11) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return WorkflowRunSharding.WORKFLOW_RUN_SHARDING.ID;
    }

    @Override
    public Field<String> field2() {
        return WorkflowRunSharding.WORKFLOW_RUN_SHARDING.KEY;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return WorkflowRunSharding.WORKFLOW_RUN_SHARDING.KEY_TIME;
    }

    @Override
    public Field<Long> field4() {
        return WorkflowRunSharding.WORKFLOW_RUN_SHARDING.COUNT;
    }

    @Override
    public Field<Long> field5() {
        return WorkflowRunSharding.WORKFLOW_RUN_SHARDING.MAX_COUNT;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return WorkflowRunSharding.WORKFLOW_RUN_SHARDING.CTIME;
    }

    @Override
    public Field<String> field7() {
        return WorkflowRunSharding.WORKFLOW_RUN_SHARDING.CU_NAME;
    }

    @Override
    public Field<Long> field8() {
        return WorkflowRunSharding.WORKFLOW_RUN_SHARDING.CUID;
    }

    @Override
    public Field<LocalDateTime> field9() {
        return WorkflowRunSharding.WORKFLOW_RUN_SHARDING.MTIME;
    }

    @Override
    public Field<String> field10() {
        return WorkflowRunSharding.WORKFLOW_RUN_SHARDING.MU_NAME;
    }

    @Override
    public Field<Long> field11() {
        return WorkflowRunSharding.WORKFLOW_RUN_SHARDING.MUID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getKey();
    }

    @Override
    public LocalDateTime component3() {
        return getKeyTime();
    }

    @Override
    public Long component4() {
        return getCount();
    }

    @Override
    public Long component5() {
        return getMaxCount();
    }

    @Override
    public LocalDateTime component6() {
        return getCtime();
    }

    @Override
    public String component7() {
        return getCuName();
    }

    @Override
    public Long component8() {
        return getCuid();
    }

    @Override
    public LocalDateTime component9() {
        return getMtime();
    }

    @Override
    public String component10() {
        return getMuName();
    }

    @Override
    public Long component11() {
        return getMuid();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getKey();
    }

    @Override
    public LocalDateTime value3() {
        return getKeyTime();
    }

    @Override
    public Long value4() {
        return getCount();
    }

    @Override
    public Long value5() {
        return getMaxCount();
    }

    @Override
    public LocalDateTime value6() {
        return getCtime();
    }

    @Override
    public String value7() {
        return getCuName();
    }

    @Override
    public Long value8() {
        return getCuid();
    }

    @Override
    public LocalDateTime value9() {
        return getMtime();
    }

    @Override
    public String value10() {
        return getMuName();
    }

    @Override
    public Long value11() {
        return getMuid();
    }

    @Override
    public WorkflowRunShardingRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public WorkflowRunShardingRecord value2(String value) {
        setKey(value);
        return this;
    }

    @Override
    public WorkflowRunShardingRecord value3(LocalDateTime value) {
        setKeyTime(value);
        return this;
    }

    @Override
    public WorkflowRunShardingRecord value4(Long value) {
        setCount(value);
        return this;
    }

    @Override
    public WorkflowRunShardingRecord value5(Long value) {
        setMaxCount(value);
        return this;
    }

    @Override
    public WorkflowRunShardingRecord value6(LocalDateTime value) {
        setCtime(value);
        return this;
    }

    @Override
    public WorkflowRunShardingRecord value7(String value) {
        setCuName(value);
        return this;
    }

    @Override
    public WorkflowRunShardingRecord value8(Long value) {
        setCuid(value);
        return this;
    }

    @Override
    public WorkflowRunShardingRecord value9(LocalDateTime value) {
        setMtime(value);
        return this;
    }

    @Override
    public WorkflowRunShardingRecord value10(String value) {
        setMuName(value);
        return this;
    }

    @Override
    public WorkflowRunShardingRecord value11(Long value) {
        setMuid(value);
        return this;
    }

    @Override
    public WorkflowRunShardingRecord values(Long value1, String value2, LocalDateTime value3, Long value4, Long value5, LocalDateTime value6, String value7, Long value8, LocalDateTime value9, String value10, Long value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached WorkflowRunShardingRecord
     */
    public WorkflowRunShardingRecord() {
        super(WorkflowRunSharding.WORKFLOW_RUN_SHARDING);
    }

    /**
     * Create a detached, initialised WorkflowRunShardingRecord
     */
    public WorkflowRunShardingRecord(Long id, String key, LocalDateTime keyTime, Long count, Long maxCount, LocalDateTime ctime, String cuName, Long cuid, LocalDateTime mtime, String muName, Long muid) {
        super(WorkflowRunSharding.WORKFLOW_RUN_SHARDING);

        setId(id);
        setKey(key);
        setKeyTime(keyTime);
        setCount(count);
        setMaxCount(maxCount);
        setCtime(ctime);
        setCuName(cuName);
        setCuid(cuid);
        setMtime(mtime);
        setMuName(muName);
        setMuid(muid);
    }
}
