/*
 * This file is generated by jOOQ.
 */
package com.ke.bella.workflow.db.tables.daos;


import com.ke.bella.workflow.db.tables.Tenant;
import com.ke.bella.workflow.db.tables.pojos.TenantDB;
import com.ke.bella.workflow.db.tables.records.TenantRecord;

import java.time.LocalDateTime;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TenantDBDao extends DAOImpl<TenantRecord, TenantDB, Long> {

    /**
     * Create a new TenantDBDao without any configuration
     */
    public TenantDBDao() {
        super(Tenant.TENANT, TenantDB.class);
    }

    /**
     * Create a new TenantDBDao with an attached configuration
     */
    public TenantDBDao(Configuration configuration) {
        super(Tenant.TENANT, TenantDB.class, configuration);
    }

    @Override
    public Long getId(TenantDB object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<TenantDB> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Tenant.TENANT.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<TenantDB> fetchById(Long... values) {
        return fetch(Tenant.TENANT.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public TenantDB fetchOneById(Long value) {
        return fetchOne(Tenant.TENANT.ID, value);
    }

    /**
     * Fetch records that have <code>tenant_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<TenantDB> fetchRangeOfTenantId(String lowerInclusive, String upperInclusive) {
        return fetchRange(Tenant.TENANT.TENANT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tenant_id IN (values)</code>
     */
    public List<TenantDB> fetchByTenantId(String... values) {
        return fetch(Tenant.TENANT.TENANT_ID, values);
    }

    /**
     * Fetch records that have <code>tenant_name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<TenantDB> fetchRangeOfTenantName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Tenant.TENANT.TENANT_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tenant_name IN (values)</code>
     */
    public List<TenantDB> fetchByTenantName(String... values) {
        return fetch(Tenant.TENANT.TENANT_NAME, values);
    }

    /**
     * Fetch records that have <code>cuid BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<TenantDB> fetchRangeOfCuid(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Tenant.TENANT.CUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>cuid IN (values)</code>
     */
    public List<TenantDB> fetchByCuid(Long... values) {
        return fetch(Tenant.TENANT.CUID, values);
    }

    /**
     * Fetch records that have <code>cu_name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<TenantDB> fetchRangeOfCuName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Tenant.TENANT.CU_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>cu_name IN (values)</code>
     */
    public List<TenantDB> fetchByCuName(String... values) {
        return fetch(Tenant.TENANT.CU_NAME, values);
    }

    /**
     * Fetch records that have <code>ctime BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<TenantDB> fetchRangeOfCtime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Tenant.TENANT.CTIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ctime IN (values)</code>
     */
    public List<TenantDB> fetchByCtime(LocalDateTime... values) {
        return fetch(Tenant.TENANT.CTIME, values);
    }

    /**
     * Fetch records that have <code>muid BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<TenantDB> fetchRangeOfMuid(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Tenant.TENANT.MUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>muid IN (values)</code>
     */
    public List<TenantDB> fetchByMuid(Long... values) {
        return fetch(Tenant.TENANT.MUID, values);
    }

    /**
     * Fetch records that have <code>mu_name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<TenantDB> fetchRangeOfMuName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Tenant.TENANT.MU_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>mu_name IN (values)</code>
     */
    public List<TenantDB> fetchByMuName(String... values) {
        return fetch(Tenant.TENANT.MU_NAME, values);
    }

    /**
     * Fetch records that have <code>mtime BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<TenantDB> fetchRangeOfMtime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Tenant.TENANT.MTIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>mtime IN (values)</code>
     */
    public List<TenantDB> fetchByMtime(LocalDateTime... values) {
        return fetch(Tenant.TENANT.MTIME, values);
    }
}
