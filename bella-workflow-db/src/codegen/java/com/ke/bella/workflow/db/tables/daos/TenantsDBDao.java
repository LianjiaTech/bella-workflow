/*
 * This file is generated by jOOQ.
 */
package com.ke.bella.workflow.db.tables.daos;


import com.ke.bella.workflow.db.tables.Tenants;
import com.ke.bella.workflow.db.tables.pojos.TenantsDB;
import com.ke.bella.workflow.db.tables.records.TenantsRecord;

import java.time.LocalDateTime;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TenantsDBDao extends DAOImpl<TenantsRecord, TenantsDB, Long> {

    /**
     * Create a new TenantsDBDao without any configuration
     */
    public TenantsDBDao() {
        super(Tenants.TENANTS, TenantsDB.class);
    }

    /**
     * Create a new TenantsDBDao with an attached configuration
     */
    public TenantsDBDao(Configuration configuration) {
        super(Tenants.TENANTS, TenantsDB.class, configuration);
    }

    @Override
    public Long getId(TenantsDB object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<TenantsDB> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Tenants.TENANTS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<TenantsDB> fetchById(Long... values) {
        return fetch(Tenants.TENANTS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public TenantsDB fetchOneById(Long value) {
        return fetchOne(Tenants.TENANTS.ID, value);
    }

    /**
     * Fetch records that have <code>tenant_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<TenantsDB> fetchRangeOfTenantId(String lowerInclusive, String upperInclusive) {
        return fetchRange(Tenants.TENANTS.TENANT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tenant_id IN (values)</code>
     */
    public List<TenantsDB> fetchByTenantId(String... values) {
        return fetch(Tenants.TENANTS.TENANT_ID, values);
    }

    /**
     * Fetch records that have <code>tenant_name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<TenantsDB> fetchRangeOfTenantName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Tenants.TENANTS.TENANT_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tenant_name IN (values)</code>
     */
    public List<TenantsDB> fetchByTenantName(String... values) {
        return fetch(Tenants.TENANTS.TENANT_NAME, values);
    }

    /**
     * Fetch records that have <code>cuid BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<TenantsDB> fetchRangeOfCuid(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Tenants.TENANTS.CUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>cuid IN (values)</code>
     */
    public List<TenantsDB> fetchByCuid(Long... values) {
        return fetch(Tenants.TENANTS.CUID, values);
    }

    /**
     * Fetch records that have <code>cu_name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<TenantsDB> fetchRangeOfCuName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Tenants.TENANTS.CU_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>cu_name IN (values)</code>
     */
    public List<TenantsDB> fetchByCuName(String... values) {
        return fetch(Tenants.TENANTS.CU_NAME, values);
    }

    /**
     * Fetch records that have <code>ctime BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<TenantsDB> fetchRangeOfCtime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Tenants.TENANTS.CTIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ctime IN (values)</code>
     */
    public List<TenantsDB> fetchByCtime(LocalDateTime... values) {
        return fetch(Tenants.TENANTS.CTIME, values);
    }

    /**
     * Fetch records that have <code>muid BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<TenantsDB> fetchRangeOfMuid(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Tenants.TENANTS.MUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>muid IN (values)</code>
     */
    public List<TenantsDB> fetchByMuid(Long... values) {
        return fetch(Tenants.TENANTS.MUID, values);
    }

    /**
     * Fetch records that have <code>mu_name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<TenantsDB> fetchRangeOfMuName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Tenants.TENANTS.MU_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>mu_name IN (values)</code>
     */
    public List<TenantsDB> fetchByMuName(String... values) {
        return fetch(Tenants.TENANTS.MU_NAME, values);
    }

    /**
     * Fetch records that have <code>mtime BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<TenantsDB> fetchRangeOfMtime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Tenants.TENANTS.MTIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>mtime IN (values)</code>
     */
    public List<TenantsDB> fetchByMtime(LocalDateTime... values) {
        return fetch(Tenants.TENANTS.MTIME, values);
    }
}
