/*
 * This file is generated by jOOQ.
 */
package com.ke.bella.workflow.db.tables.records;


import com.ke.bella.workflow.db.tables.Instance;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InstanceRecord extends UpdatableRecordImpl<InstanceRecord> implements Record6<Long, String, Integer, Integer, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>instance.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>instance.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>instance.ip</code>.
     */
    public void setIp(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>instance.ip</code>.
     */
    public String getIp() {
        return (String) get(1);
    }

    /**
     * Setter for <code>instance.port</code>.
     */
    public void setPort(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>instance.port</code>.
     */
    public Integer getPort() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>instance.status</code>.
     */
    public void setStatus(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>instance.status</code>.
     */
    public Integer getStatus() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>instance.ctime</code>.
     */
    public void setCtime(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>instance.ctime</code>.
     */
    public LocalDateTime getCtime() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>instance.mtime</code>.
     */
    public void setMtime(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>instance.mtime</code>.
     */
    public LocalDateTime getMtime() {
        return (LocalDateTime) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, String, Integer, Integer, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Long, String, Integer, Integer, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Instance.INSTANCE.ID;
    }

    @Override
    public Field<String> field2() {
        return Instance.INSTANCE.IP;
    }

    @Override
    public Field<Integer> field3() {
        return Instance.INSTANCE.PORT;
    }

    @Override
    public Field<Integer> field4() {
        return Instance.INSTANCE.STATUS;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return Instance.INSTANCE.CTIME;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return Instance.INSTANCE.MTIME;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getIp();
    }

    @Override
    public Integer component3() {
        return getPort();
    }

    @Override
    public Integer component4() {
        return getStatus();
    }

    @Override
    public LocalDateTime component5() {
        return getCtime();
    }

    @Override
    public LocalDateTime component6() {
        return getMtime();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getIp();
    }

    @Override
    public Integer value3() {
        return getPort();
    }

    @Override
    public Integer value4() {
        return getStatus();
    }

    @Override
    public LocalDateTime value5() {
        return getCtime();
    }

    @Override
    public LocalDateTime value6() {
        return getMtime();
    }

    @Override
    public InstanceRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public InstanceRecord value2(String value) {
        setIp(value);
        return this;
    }

    @Override
    public InstanceRecord value3(Integer value) {
        setPort(value);
        return this;
    }

    @Override
    public InstanceRecord value4(Integer value) {
        setStatus(value);
        return this;
    }

    @Override
    public InstanceRecord value5(LocalDateTime value) {
        setCtime(value);
        return this;
    }

    @Override
    public InstanceRecord value6(LocalDateTime value) {
        setMtime(value);
        return this;
    }

    @Override
    public InstanceRecord values(Long value1, String value2, Integer value3, Integer value4, LocalDateTime value5, LocalDateTime value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached InstanceRecord
     */
    public InstanceRecord() {
        super(Instance.INSTANCE);
    }

    /**
     * Create a detached, initialised InstanceRecord
     */
    public InstanceRecord(Long id, String ip, Integer port, Integer status, LocalDateTime ctime, LocalDateTime mtime) {
        super(Instance.INSTANCE);

        setId(id);
        setIp(ip);
        setPort(port);
        setStatus(status);
        setCtime(ctime);
        setMtime(mtime);
    }
}
