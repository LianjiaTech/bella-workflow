/*
 * This file is generated by jOOQ.
 */
package com.ke.bella.workflow.db.tables.records;


import com.ke.bella.workflow.db.repo.Operator;
import com.ke.bella.workflow.db.tables.KafkaDatasource;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record18;
import org.jooq.Row18;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class KafkaDatasourceRecord extends UpdatableRecordImpl<KafkaDatasourceRecord> implements Operator, Record18<Long, String, String, String, String, String, String, String, String, String, String, Integer, Long, Long, LocalDateTime, LocalDateTime, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>kafka_datasource.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>kafka_datasource.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>kafka_datasource.tenant_id</code>. 租户ID
     */
    public void setTenantId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>kafka_datasource.tenant_id</code>. 租户ID
     */
    public String getTenantId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>kafka_datasource.datasource_id</code>.
     */
    public void setDatasourceId(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>kafka_datasource.datasource_id</code>.
     */
    public String getDatasourceId() {
        return (String) get(2);
    }

    /**
     * Setter for <code>kafka_datasource.space_code</code>.
     */
    public void setSpaceCode(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>kafka_datasource.space_code</code>.
     */
    public String getSpaceCode() {
        return (String) get(3);
    }

    /**
     * Setter for <code>kafka_datasource.type</code>. kafka数据源类型producer, consumer
     */
    public void setType(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>kafka_datasource.type</code>. kafka数据源类型producer, consumer
     */
    public String getType() {
        return (String) get(4);
    }

    /**
     * Setter for <code>kafka_datasource.server</code>. kafka服务地址
host:port
     */
    public void setServer(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>kafka_datasource.server</code>. kafka服务地址
host:port
     */
    public String getServer() {
        return (String) get(5);
    }

    /**
     * Setter for <code>kafka_datasource.topic</code>. Kafka topic
     */
    public void setTopic(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>kafka_datasource.topic</code>. Kafka topic
     */
    public String getTopic() {
        return (String) get(6);
    }

    /**
     * Setter for <code>kafka_datasource.name</code>. 数据源名称
     */
    public void setName(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>kafka_datasource.name</code>. 数据源名称
     */
    public String getName() {
        return (String) get(7);
    }

    /**
     * Setter for <code>kafka_datasource.msg_schema</code>. 消息体的json schema
     */
    public void setMsgSchema(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>kafka_datasource.msg_schema</code>. 消息体的json schema
     */
    public String getMsgSchema() {
        return (String) get(8);
    }

    /**
     * Setter for <code>kafka_datasource.auto_offset_reset</code>. 偏移量重置策略：latest, earliest，默认为latest
     */
    public void setAutoOffsetReset(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>kafka_datasource.auto_offset_reset</code>. 偏移量重置策略：latest, earliest，默认为latest
     */
    public String getAutoOffsetReset() {
        return (String) get(9);
    }

    /**
     * Setter for <code>kafka_datasource.auth_config</code>. Kafka认证配置,存储为JSON格式,不为空表示需要认证
     */
    public void setAuthConfig(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>kafka_datasource.auth_config</code>. Kafka认证配置,存储为JSON格式,不为空表示需要认证
     */
    public String getAuthConfig() {
        return (String) get(10);
    }

    /**
     * Setter for <code>kafka_datasource.status</code>. 数据源状态
-1: 无笑
0: 生效
     */
    public void setStatus(Integer value) {
        set(11, value);
    }

    /**
     * Getter for <code>kafka_datasource.status</code>. 数据源状态
-1: 无笑
0: 生效
     */
    public Integer getStatus() {
        return (Integer) get(11);
    }

    /**
     * Setter for <code>kafka_datasource.cuid</code>.
     */
    public void setCuid(Long value) {
        set(12, value);
    }

    /**
     * Getter for <code>kafka_datasource.cuid</code>.
     */
    public Long getCuid() {
        return (Long) get(12);
    }

    /**
     * Setter for <code>kafka_datasource.muid</code>.
     */
    public void setMuid(Long value) {
        set(13, value);
    }

    /**
     * Getter for <code>kafka_datasource.muid</code>.
     */
    public Long getMuid() {
        return (Long) get(13);
    }

    /**
     * Setter for <code>kafka_datasource.ctime</code>.
     */
    public void setCtime(LocalDateTime value) {
        set(14, value);
    }

    /**
     * Getter for <code>kafka_datasource.ctime</code>.
     */
    public LocalDateTime getCtime() {
        return (LocalDateTime) get(14);
    }

    /**
     * Setter for <code>kafka_datasource.mtime</code>.
     */
    public void setMtime(LocalDateTime value) {
        set(15, value);
    }

    /**
     * Getter for <code>kafka_datasource.mtime</code>.
     */
    public LocalDateTime getMtime() {
        return (LocalDateTime) get(15);
    }

    /**
     * Setter for <code>kafka_datasource.cu_name</code>.
     */
    public void setCuName(String value) {
        set(16, value);
    }

    /**
     * Getter for <code>kafka_datasource.cu_name</code>.
     */
    public String getCuName() {
        return (String) get(16);
    }

    /**
     * Setter for <code>kafka_datasource.mu_name</code>.
     */
    public void setMuName(String value) {
        set(17, value);
    }

    /**
     * Getter for <code>kafka_datasource.mu_name</code>.
     */
    public String getMuName() {
        return (String) get(17);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record18 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row18<Long, String, String, String, String, String, String, String, String, String, String, Integer, Long, Long, LocalDateTime, LocalDateTime, String, String> fieldsRow() {
        return (Row18) super.fieldsRow();
    }

    @Override
    public Row18<Long, String, String, String, String, String, String, String, String, String, String, Integer, Long, Long, LocalDateTime, LocalDateTime, String, String> valuesRow() {
        return (Row18) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return KafkaDatasource.KAFKA_DATASOURCE.ID;
    }

    @Override
    public Field<String> field2() {
        return KafkaDatasource.KAFKA_DATASOURCE.TENANT_ID;
    }

    @Override
    public Field<String> field3() {
        return KafkaDatasource.KAFKA_DATASOURCE.DATASOURCE_ID;
    }

    @Override
    public Field<String> field4() {
        return KafkaDatasource.KAFKA_DATASOURCE.SPACE_CODE;
    }

    @Override
    public Field<String> field5() {
        return KafkaDatasource.KAFKA_DATASOURCE.TYPE;
    }

    @Override
    public Field<String> field6() {
        return KafkaDatasource.KAFKA_DATASOURCE.SERVER;
    }

    @Override
    public Field<String> field7() {
        return KafkaDatasource.KAFKA_DATASOURCE.TOPIC;
    }

    @Override
    public Field<String> field8() {
        return KafkaDatasource.KAFKA_DATASOURCE.NAME;
    }

    @Override
    public Field<String> field9() {
        return KafkaDatasource.KAFKA_DATASOURCE.MSG_SCHEMA;
    }

    @Override
    public Field<String> field10() {
        return KafkaDatasource.KAFKA_DATASOURCE.AUTO_OFFSET_RESET;
    }

    @Override
    public Field<String> field11() {
        return KafkaDatasource.KAFKA_DATASOURCE.AUTH_CONFIG;
    }

    @Override
    public Field<Integer> field12() {
        return KafkaDatasource.KAFKA_DATASOURCE.STATUS;
    }

    @Override
    public Field<Long> field13() {
        return KafkaDatasource.KAFKA_DATASOURCE.CUID;
    }

    @Override
    public Field<Long> field14() {
        return KafkaDatasource.KAFKA_DATASOURCE.MUID;
    }

    @Override
    public Field<LocalDateTime> field15() {
        return KafkaDatasource.KAFKA_DATASOURCE.CTIME;
    }

    @Override
    public Field<LocalDateTime> field16() {
        return KafkaDatasource.KAFKA_DATASOURCE.MTIME;
    }

    @Override
    public Field<String> field17() {
        return KafkaDatasource.KAFKA_DATASOURCE.CU_NAME;
    }

    @Override
    public Field<String> field18() {
        return KafkaDatasource.KAFKA_DATASOURCE.MU_NAME;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getTenantId();
    }

    @Override
    public String component3() {
        return getDatasourceId();
    }

    @Override
    public String component4() {
        return getSpaceCode();
    }

    @Override
    public String component5() {
        return getType();
    }

    @Override
    public String component6() {
        return getServer();
    }

    @Override
    public String component7() {
        return getTopic();
    }

    @Override
    public String component8() {
        return getName();
    }

    @Override
    public String component9() {
        return getMsgSchema();
    }

    @Override
    public String component10() {
        return getAutoOffsetReset();
    }

    @Override
    public String component11() {
        return getAuthConfig();
    }

    @Override
    public Integer component12() {
        return getStatus();
    }

    @Override
    public Long component13() {
        return getCuid();
    }

    @Override
    public Long component14() {
        return getMuid();
    }

    @Override
    public LocalDateTime component15() {
        return getCtime();
    }

    @Override
    public LocalDateTime component16() {
        return getMtime();
    }

    @Override
    public String component17() {
        return getCuName();
    }

    @Override
    public String component18() {
        return getMuName();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getTenantId();
    }

    @Override
    public String value3() {
        return getDatasourceId();
    }

    @Override
    public String value4() {
        return getSpaceCode();
    }

    @Override
    public String value5() {
        return getType();
    }

    @Override
    public String value6() {
        return getServer();
    }

    @Override
    public String value7() {
        return getTopic();
    }

    @Override
    public String value8() {
        return getName();
    }

    @Override
    public String value9() {
        return getMsgSchema();
    }

    @Override
    public String value10() {
        return getAutoOffsetReset();
    }

    @Override
    public String value11() {
        return getAuthConfig();
    }

    @Override
    public Integer value12() {
        return getStatus();
    }

    @Override
    public Long value13() {
        return getCuid();
    }

    @Override
    public Long value14() {
        return getMuid();
    }

    @Override
    public LocalDateTime value15() {
        return getCtime();
    }

    @Override
    public LocalDateTime value16() {
        return getMtime();
    }

    @Override
    public String value17() {
        return getCuName();
    }

    @Override
    public String value18() {
        return getMuName();
    }

    @Override
    public KafkaDatasourceRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public KafkaDatasourceRecord value2(String value) {
        setTenantId(value);
        return this;
    }

    @Override
    public KafkaDatasourceRecord value3(String value) {
        setDatasourceId(value);
        return this;
    }

    @Override
    public KafkaDatasourceRecord value4(String value) {
        setSpaceCode(value);
        return this;
    }

    @Override
    public KafkaDatasourceRecord value5(String value) {
        setType(value);
        return this;
    }

    @Override
    public KafkaDatasourceRecord value6(String value) {
        setServer(value);
        return this;
    }

    @Override
    public KafkaDatasourceRecord value7(String value) {
        setTopic(value);
        return this;
    }

    @Override
    public KafkaDatasourceRecord value8(String value) {
        setName(value);
        return this;
    }

    @Override
    public KafkaDatasourceRecord value9(String value) {
        setMsgSchema(value);
        return this;
    }

    @Override
    public KafkaDatasourceRecord value10(String value) {
        setAutoOffsetReset(value);
        return this;
    }

    @Override
    public KafkaDatasourceRecord value11(String value) {
        setAuthConfig(value);
        return this;
    }

    @Override
    public KafkaDatasourceRecord value12(Integer value) {
        setStatus(value);
        return this;
    }

    @Override
    public KafkaDatasourceRecord value13(Long value) {
        setCuid(value);
        return this;
    }

    @Override
    public KafkaDatasourceRecord value14(Long value) {
        setMuid(value);
        return this;
    }

    @Override
    public KafkaDatasourceRecord value15(LocalDateTime value) {
        setCtime(value);
        return this;
    }

    @Override
    public KafkaDatasourceRecord value16(LocalDateTime value) {
        setMtime(value);
        return this;
    }

    @Override
    public KafkaDatasourceRecord value17(String value) {
        setCuName(value);
        return this;
    }

    @Override
    public KafkaDatasourceRecord value18(String value) {
        setMuName(value);
        return this;
    }

    @Override
    public KafkaDatasourceRecord values(Long value1, String value2, String value3, String value4, String value5, String value6, String value7, String value8, String value9, String value10, String value11, Integer value12, Long value13, Long value14, LocalDateTime value15, LocalDateTime value16, String value17, String value18) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached KafkaDatasourceRecord
     */
    public KafkaDatasourceRecord() {
        super(KafkaDatasource.KAFKA_DATASOURCE);
    }

    /**
     * Create a detached, initialised KafkaDatasourceRecord
     */
    public KafkaDatasourceRecord(Long id, String tenantId, String datasourceId, String spaceCode, String type, String server, String topic, String name, String msgSchema, String autoOffsetReset, String authConfig, Integer status, Long cuid, Long muid, LocalDateTime ctime, LocalDateTime mtime, String cuName, String muName) {
        super(KafkaDatasource.KAFKA_DATASOURCE);

        setId(id);
        setTenantId(tenantId);
        setDatasourceId(datasourceId);
        setSpaceCode(spaceCode);
        setType(type);
        setServer(server);
        setTopic(topic);
        setName(name);
        setMsgSchema(msgSchema);
        setAutoOffsetReset(autoOffsetReset);
        setAuthConfig(authConfig);
        setStatus(status);
        setCuid(cuid);
        setMuid(muid);
        setCtime(ctime);
        setMtime(mtime);
        setCuName(cuName);
        setMuName(muName);
    }
}
