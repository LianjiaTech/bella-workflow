/*
 * This file is generated by jOOQ.
 */
package com.ke.bella.workflow.db.tables.records;


import com.ke.bella.workflow.db.repo.Operator;
import com.ke.bella.workflow.db.tables.RdbDatasource;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record18;
import org.jooq.Row18;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RdbDatasourceRecord extends UpdatableRecordImpl<RdbDatasourceRecord> implements Operator, Record18<Long, String, String, String, String, String, Integer, String, String, String, String, Integer, Long, Long, LocalDateTime, LocalDateTime, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>rdb_datasource.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>rdb_datasource.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>rdb_datasource.tenant_id</code>. 租户ID
     */
    public void setTenantId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>rdb_datasource.tenant_id</code>. 租户ID
     */
    public String getTenantId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>rdb_datasource.datasource_id</code>.
     */
    public void setDatasourceId(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>rdb_datasource.datasource_id</code>.
     */
    public String getDatasourceId() {
        return (String) get(2);
    }

    /**
     * Setter for <code>rdb_datasource.space_code</code>.
     */
    public void setSpaceCode(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>rdb_datasource.space_code</code>.
     */
    public String getSpaceCode() {
        return (String) get(3);
    }

    /**
     * Setter for <code>rdb_datasource.db_type</code>. mysql, postgresql
     */
    public void setDbType(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>rdb_datasource.db_type</code>. mysql, postgresql
     */
    public String getDbType() {
        return (String) get(4);
    }

    /**
     * Setter for <code>rdb_datasource.host</code>. 主机
host:port
     */
    public void setHost(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>rdb_datasource.host</code>. 主机
host:port
     */
    public String getHost() {
        return (String) get(5);
    }

    /**
     * Setter for <code>rdb_datasource.port</code>. 端口
     */
    public void setPort(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>rdb_datasource.port</code>. 端口
     */
    public Integer getPort() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>rdb_datasource.db</code>. 默认数据库
     */
    public void setDb(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>rdb_datasource.db</code>. 默认数据库
     */
    public String getDb() {
        return (String) get(7);
    }

    /**
     * Setter for <code>rdb_datasource.user</code>. 用户名
     */
    public void setUser(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>rdb_datasource.user</code>. 用户名
     */
    public String getUser() {
        return (String) get(8);
    }

    /**
     * Setter for <code>rdb_datasource.password</code>. 密码
     */
    public void setPassword(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>rdb_datasource.password</code>. 密码
     */
    public String getPassword() {
        return (String) get(9);
    }

    /**
     * Setter for <code>rdb_datasource.params</code>. 其他参数
     */
    public void setParams(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>rdb_datasource.params</code>. 其他参数
     */
    public String getParams() {
        return (String) get(10);
    }

    /**
     * Setter for <code>rdb_datasource.status</code>. 数据源状态
-1: 无笑
0: 生效
     */
    public void setStatus(Integer value) {
        set(11, value);
    }

    /**
     * Getter for <code>rdb_datasource.status</code>. 数据源状态
-1: 无笑
0: 生效
     */
    public Integer getStatus() {
        return (Integer) get(11);
    }

    /**
     * Setter for <code>rdb_datasource.cuid</code>.
     */
    public void setCuid(Long value) {
        set(12, value);
    }

    /**
     * Getter for <code>rdb_datasource.cuid</code>.
     */
    public Long getCuid() {
        return (Long) get(12);
    }

    /**
     * Setter for <code>rdb_datasource.muid</code>.
     */
    public void setMuid(Long value) {
        set(13, value);
    }

    /**
     * Getter for <code>rdb_datasource.muid</code>.
     */
    public Long getMuid() {
        return (Long) get(13);
    }

    /**
     * Setter for <code>rdb_datasource.ctime</code>.
     */
    public void setCtime(LocalDateTime value) {
        set(14, value);
    }

    /**
     * Getter for <code>rdb_datasource.ctime</code>.
     */
    public LocalDateTime getCtime() {
        return (LocalDateTime) get(14);
    }

    /**
     * Setter for <code>rdb_datasource.mtime</code>.
     */
    public void setMtime(LocalDateTime value) {
        set(15, value);
    }

    /**
     * Getter for <code>rdb_datasource.mtime</code>.
     */
    public LocalDateTime getMtime() {
        return (LocalDateTime) get(15);
    }

    /**
     * Setter for <code>rdb_datasource.cu_name</code>.
     */
    public void setCuName(String value) {
        set(16, value);
    }

    /**
     * Getter for <code>rdb_datasource.cu_name</code>.
     */
    public String getCuName() {
        return (String) get(16);
    }

    /**
     * Setter for <code>rdb_datasource.mu_name</code>.
     */
    public void setMuName(String value) {
        set(17, value);
    }

    /**
     * Getter for <code>rdb_datasource.mu_name</code>.
     */
    public String getMuName() {
        return (String) get(17);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record18 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row18<Long, String, String, String, String, String, Integer, String, String, String, String, Integer, Long, Long, LocalDateTime, LocalDateTime, String, String> fieldsRow() {
        return (Row18) super.fieldsRow();
    }

    @Override
    public Row18<Long, String, String, String, String, String, Integer, String, String, String, String, Integer, Long, Long, LocalDateTime, LocalDateTime, String, String> valuesRow() {
        return (Row18) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return RdbDatasource.RDB_DATASOURCE.ID;
    }

    @Override
    public Field<String> field2() {
        return RdbDatasource.RDB_DATASOURCE.TENANT_ID;
    }

    @Override
    public Field<String> field3() {
        return RdbDatasource.RDB_DATASOURCE.DATASOURCE_ID;
    }

    @Override
    public Field<String> field4() {
        return RdbDatasource.RDB_DATASOURCE.SPACE_CODE;
    }

    @Override
    public Field<String> field5() {
        return RdbDatasource.RDB_DATASOURCE.DB_TYPE;
    }

    @Override
    public Field<String> field6() {
        return RdbDatasource.RDB_DATASOURCE.HOST;
    }

    @Override
    public Field<Integer> field7() {
        return RdbDatasource.RDB_DATASOURCE.PORT;
    }

    @Override
    public Field<String> field8() {
        return RdbDatasource.RDB_DATASOURCE.DB;
    }

    @Override
    public Field<String> field9() {
        return RdbDatasource.RDB_DATASOURCE.USER;
    }

    @Override
    public Field<String> field10() {
        return RdbDatasource.RDB_DATASOURCE.PASSWORD;
    }

    @Override
    public Field<String> field11() {
        return RdbDatasource.RDB_DATASOURCE.PARAMS;
    }

    @Override
    public Field<Integer> field12() {
        return RdbDatasource.RDB_DATASOURCE.STATUS;
    }

    @Override
    public Field<Long> field13() {
        return RdbDatasource.RDB_DATASOURCE.CUID;
    }

    @Override
    public Field<Long> field14() {
        return RdbDatasource.RDB_DATASOURCE.MUID;
    }

    @Override
    public Field<LocalDateTime> field15() {
        return RdbDatasource.RDB_DATASOURCE.CTIME;
    }

    @Override
    public Field<LocalDateTime> field16() {
        return RdbDatasource.RDB_DATASOURCE.MTIME;
    }

    @Override
    public Field<String> field17() {
        return RdbDatasource.RDB_DATASOURCE.CU_NAME;
    }

    @Override
    public Field<String> field18() {
        return RdbDatasource.RDB_DATASOURCE.MU_NAME;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getTenantId();
    }

    @Override
    public String component3() {
        return getDatasourceId();
    }

    @Override
    public String component4() {
        return getSpaceCode();
    }

    @Override
    public String component5() {
        return getDbType();
    }

    @Override
    public String component6() {
        return getHost();
    }

    @Override
    public Integer component7() {
        return getPort();
    }

    @Override
    public String component8() {
        return getDb();
    }

    @Override
    public String component9() {
        return getUser();
    }

    @Override
    public String component10() {
        return getPassword();
    }

    @Override
    public String component11() {
        return getParams();
    }

    @Override
    public Integer component12() {
        return getStatus();
    }

    @Override
    public Long component13() {
        return getCuid();
    }

    @Override
    public Long component14() {
        return getMuid();
    }

    @Override
    public LocalDateTime component15() {
        return getCtime();
    }

    @Override
    public LocalDateTime component16() {
        return getMtime();
    }

    @Override
    public String component17() {
        return getCuName();
    }

    @Override
    public String component18() {
        return getMuName();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getTenantId();
    }

    @Override
    public String value3() {
        return getDatasourceId();
    }

    @Override
    public String value4() {
        return getSpaceCode();
    }

    @Override
    public String value5() {
        return getDbType();
    }

    @Override
    public String value6() {
        return getHost();
    }

    @Override
    public Integer value7() {
        return getPort();
    }

    @Override
    public String value8() {
        return getDb();
    }

    @Override
    public String value9() {
        return getUser();
    }

    @Override
    public String value10() {
        return getPassword();
    }

    @Override
    public String value11() {
        return getParams();
    }

    @Override
    public Integer value12() {
        return getStatus();
    }

    @Override
    public Long value13() {
        return getCuid();
    }

    @Override
    public Long value14() {
        return getMuid();
    }

    @Override
    public LocalDateTime value15() {
        return getCtime();
    }

    @Override
    public LocalDateTime value16() {
        return getMtime();
    }

    @Override
    public String value17() {
        return getCuName();
    }

    @Override
    public String value18() {
        return getMuName();
    }

    @Override
    public RdbDatasourceRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public RdbDatasourceRecord value2(String value) {
        setTenantId(value);
        return this;
    }

    @Override
    public RdbDatasourceRecord value3(String value) {
        setDatasourceId(value);
        return this;
    }

    @Override
    public RdbDatasourceRecord value4(String value) {
        setSpaceCode(value);
        return this;
    }

    @Override
    public RdbDatasourceRecord value5(String value) {
        setDbType(value);
        return this;
    }

    @Override
    public RdbDatasourceRecord value6(String value) {
        setHost(value);
        return this;
    }

    @Override
    public RdbDatasourceRecord value7(Integer value) {
        setPort(value);
        return this;
    }

    @Override
    public RdbDatasourceRecord value8(String value) {
        setDb(value);
        return this;
    }

    @Override
    public RdbDatasourceRecord value9(String value) {
        setUser(value);
        return this;
    }

    @Override
    public RdbDatasourceRecord value10(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public RdbDatasourceRecord value11(String value) {
        setParams(value);
        return this;
    }

    @Override
    public RdbDatasourceRecord value12(Integer value) {
        setStatus(value);
        return this;
    }

    @Override
    public RdbDatasourceRecord value13(Long value) {
        setCuid(value);
        return this;
    }

    @Override
    public RdbDatasourceRecord value14(Long value) {
        setMuid(value);
        return this;
    }

    @Override
    public RdbDatasourceRecord value15(LocalDateTime value) {
        setCtime(value);
        return this;
    }

    @Override
    public RdbDatasourceRecord value16(LocalDateTime value) {
        setMtime(value);
        return this;
    }

    @Override
    public RdbDatasourceRecord value17(String value) {
        setCuName(value);
        return this;
    }

    @Override
    public RdbDatasourceRecord value18(String value) {
        setMuName(value);
        return this;
    }

    @Override
    public RdbDatasourceRecord values(Long value1, String value2, String value3, String value4, String value5, String value6, Integer value7, String value8, String value9, String value10, String value11, Integer value12, Long value13, Long value14, LocalDateTime value15, LocalDateTime value16, String value17, String value18) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RdbDatasourceRecord
     */
    public RdbDatasourceRecord() {
        super(RdbDatasource.RDB_DATASOURCE);
    }

    /**
     * Create a detached, initialised RdbDatasourceRecord
     */
    public RdbDatasourceRecord(Long id, String tenantId, String datasourceId, String spaceCode, String dbType, String host, Integer port, String db, String user, String password, String params, Integer status, Long cuid, Long muid, LocalDateTime ctime, LocalDateTime mtime, String cuName, String muName) {
        super(RdbDatasource.RDB_DATASOURCE);

        setId(id);
        setTenantId(tenantId);
        setDatasourceId(datasourceId);
        setSpaceCode(spaceCode);
        setDbType(dbType);
        setHost(host);
        setPort(port);
        setDb(db);
        setUser(user);
        setPassword(password);
        setParams(params);
        setStatus(status);
        setCuid(cuid);
        setMuid(muid);
        setCtime(ctime);
        setMtime(mtime);
        setCuName(cuName);
        setMuName(muName);
    }
}
