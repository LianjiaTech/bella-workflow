/*
 * This file is generated by jOOQ.
 */
package com.ke.bella.workflow.db;


import com.ke.bella.workflow.db.tables.Domain;
import com.ke.bella.workflow.db.tables.Instance;
import com.ke.bella.workflow.db.tables.KafkaDatasource;
import com.ke.bella.workflow.db.tables.Tenant;
import com.ke.bella.workflow.db.tables.WecomGroupInfo;
import com.ke.bella.workflow.db.tables.WecomGroupMember;
import com.ke.bella.workflow.db.tables.Workflow;
import com.ke.bella.workflow.db.tables.WorkflowAggregate;
import com.ke.bella.workflow.db.tables.WorkflowAsApi;
import com.ke.bella.workflow.db.tables.WorkflowKafkaTrigger;
import com.ke.bella.workflow.db.tables.WorkflowNodeRun;
import com.ke.bella.workflow.db.tables.WorkflowRun;
import com.ke.bella.workflow.db.tables.WorkflowRunSharding;
import com.ke.bella.workflow.db.tables.WorkflowScheduling;
import com.ke.bella.workflow.db.tables.WorkflowWebotTrigger;


/**
 * Convenience access to all tables in the default schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Tables {

    /**
     * The table <code>domain</code>.
     */
    public static final Domain DOMAIN = Domain.DOMAIN;

    /**
     * The table <code>instance</code>.
     */
    public static final Instance INSTANCE = Instance.INSTANCE;

    /**
     * The table <code>kafka_datasource</code>.
     */
    public static final KafkaDatasource KAFKA_DATASOURCE = KafkaDatasource.KAFKA_DATASOURCE;

    /**
     * The table <code>tenant</code>.
     */
    public static final Tenant TENANT = Tenant.TENANT;

    /**
     * 企业微信群信息管理
     */
    public static final WecomGroupInfo WECOM_GROUP_INFO = WecomGroupInfo.WECOM_GROUP_INFO;

    /**
     * 企业微信群成员信息
     */
    public static final WecomGroupMember WECOM_GROUP_MEMBER = WecomGroupMember.WECOM_GROUP_MEMBER;

    /**
     * The table <code>workflow</code>.
     */
    public static final Workflow WORKFLOW = Workflow.WORKFLOW;

    /**
     * The table <code>workflow_aggregate</code>.
     */
    public static final WorkflowAggregate WORKFLOW_AGGREGATE = WorkflowAggregate.WORKFLOW_AGGREGATE;

    /**
     * The table <code>workflow_as_api</code>.
     */
    public static final WorkflowAsApi WORKFLOW_AS_API = WorkflowAsApi.WORKFLOW_AS_API;

    /**
     * The table <code>workflow_kafka_trigger</code>.
     */
    public static final WorkflowKafkaTrigger WORKFLOW_KAFKA_TRIGGER = WorkflowKafkaTrigger.WORKFLOW_KAFKA_TRIGGER;

    /**
     * The table <code>workflow_node_run</code>.
     */
    public static final WorkflowNodeRun WORKFLOW_NODE_RUN = WorkflowNodeRun.WORKFLOW_NODE_RUN;

    /**
     * The table <code>workflow_run</code>.
     */
    public static final WorkflowRun WORKFLOW_RUN = WorkflowRun.WORKFLOW_RUN;

    /**
     * The table <code>workflow_run_sharding</code>.
     */
    public static final WorkflowRunSharding WORKFLOW_RUN_SHARDING = WorkflowRunSharding.WORKFLOW_RUN_SHARDING;

    /**
     * The table <code>workflow_scheduling</code>.
     */
    public static final WorkflowScheduling WORKFLOW_SCHEDULING = WorkflowScheduling.WORKFLOW_SCHEDULING;

    /**
     * The table <code>workflow_webot_trigger</code>.
     */
    public static final WorkflowWebotTrigger WORKFLOW_WEBOT_TRIGGER = WorkflowWebotTrigger.WORKFLOW_WEBOT_TRIGGER;
}
