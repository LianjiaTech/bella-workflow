/*
 * This file is generated by jOOQ.
 */
package com.ke.bella.workflow.db.tables;


import com.ke.bella.workflow.db.DefaultSchema;
import com.ke.bella.workflow.db.Indexes;
import com.ke.bella.workflow.db.Keys;
import com.ke.bella.workflow.db.tables.records.WecomGroupInfoRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row17;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * 企业微信群信息管理
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WecomGroupInfo extends TableImpl<WecomGroupInfoRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>wecom_group_info</code>
     */
    public static final WecomGroupInfo WECOM_GROUP_INFO = new WecomGroupInfo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<WecomGroupInfoRecord> getRecordType() {
        return WecomGroupInfoRecord.class;
    }

    /**
     * The column <code>wecom_group_info.id</code>. 主键
     */
    public final TableField<WecomGroupInfoRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "主键");

    /**
     * The column <code>wecom_group_info.tenant_id</code>. 租户ID
     */
    public final TableField<WecomGroupInfoRecord, String> TENANT_ID = createField(DSL.name("tenant_id"), SQLDataType.VARCHAR(64).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "租户ID");

    /**
     * The column <code>wecom_group_info.space_code</code>. 空间编码，默认：personal，.......
     */
    public final TableField<WecomGroupInfoRecord, String> SPACE_CODE = createField(DSL.name("space_code"), SQLDataType.VARCHAR(64).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "空间编码，默认：personal，.......");

    /**
     * The column <code>wecom_group_info.group_code</code>. 群编码-暗号
     */
    public final TableField<WecomGroupInfoRecord, String> GROUP_CODE = createField(DSL.name("group_code"), SQLDataType.VARCHAR(64).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "群编码-暗号");

    /**
     * The column <code>wecom_group_info.group_name</code>. 群名字
     */
    public final TableField<WecomGroupInfoRecord, String> GROUP_NAME = createField(DSL.name("group_name"), SQLDataType.VARCHAR(128).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "群名字");

    /**
     * The column <code>wecom_group_info.group_alias</code>. 群备注
     */
    public final TableField<WecomGroupInfoRecord, String> GROUP_ALIAS = createField(DSL.name("group_alias"), SQLDataType.VARCHAR(128).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "群备注");

    /**
     * The column <code>wecom_group_info.group_id</code>. 企微中台ID-虚拟号指定群发消息
     */
    public final TableField<WecomGroupInfoRecord, String> GROUP_ID = createField(DSL.name("group_id"), SQLDataType.VARCHAR(64).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "企微中台ID-虚拟号指定群发消息");

    /**
     * The column <code>wecom_group_info.chat_id</code>. 会话Id-群Id-机器人指定群发消息
     */
    public final TableField<WecomGroupInfoRecord, String> CHAT_ID = createField(DSL.name("chat_id"), SQLDataType.VARCHAR(64).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "会话Id-群Id-机器人指定群发消息");

    /**
     * The column <code>wecom_group_info.thread_id</code>. 会话id
     */
    public final TableField<WecomGroupInfoRecord, String> THREAD_ID = createField(DSL.name("thread_id"), SQLDataType.VARCHAR(64).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "会话id");

    /**
     * The column <code>wecom_group_info.scene</code>. exclusive_ai_assistant：专属AI助理群
     */
    public final TableField<WecomGroupInfoRecord, String> SCENE = createField(DSL.name("scene"), SQLDataType.VARCHAR(128).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "exclusive_ai_assistant：专属AI助理群");

    /**
     * The column <code>wecom_group_info.cuid</code>. 创建人ucid
     */
    public final TableField<WecomGroupInfoRecord, Long> CUID = createField(DSL.name("cuid"), SQLDataType.BIGINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.BIGINT)), this, "创建人ucid");

    /**
     * The column <code>wecom_group_info.cu_name</code>. 创建人名字
     */
    public final TableField<WecomGroupInfoRecord, String> CU_NAME = createField(DSL.name("cu_name"), SQLDataType.VARCHAR(64).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "创建人名字");

    /**
     * The column <code>wecom_group_info.muid</code>. 修改人ucid
     */
    public final TableField<WecomGroupInfoRecord, Long> MUID = createField(DSL.name("muid"), SQLDataType.BIGINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.BIGINT)), this, "修改人ucid");

    /**
     * The column <code>wecom_group_info.mu_name</code>. 修改人名字
     */
    public final TableField<WecomGroupInfoRecord, String> MU_NAME = createField(DSL.name("mu_name"), SQLDataType.VARCHAR(64).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "修改人名字");

    /**
     * The column <code>wecom_group_info.status</code>. 记录状态（0:正常, -1:已删除）
     */
    public final TableField<WecomGroupInfoRecord, Integer> STATUS = createField(DSL.name("status"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "记录状态（0:正常, -1:已删除）");

    /**
     * The column <code>wecom_group_info.ctime</code>. 创建时间
     */
    public final TableField<WecomGroupInfoRecord, LocalDateTime> CTIME = createField(DSL.name("ctime"), SQLDataType.LOCALDATETIME(0).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "创建时间");

    /**
     * The column <code>wecom_group_info.mtime</code>. 更新时间
     */
    public final TableField<WecomGroupInfoRecord, LocalDateTime> MTIME = createField(DSL.name("mtime"), SQLDataType.LOCALDATETIME(0).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "更新时间");

    private WecomGroupInfo(Name alias, Table<WecomGroupInfoRecord> aliased) {
        this(alias, aliased, null);
    }

    private WecomGroupInfo(Name alias, Table<WecomGroupInfoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("企业微信群信息管理"), TableOptions.table());
    }

    /**
     * Create an aliased <code>wecom_group_info</code> table reference
     */
    public WecomGroupInfo(String alias) {
        this(DSL.name(alias), WECOM_GROUP_INFO);
    }

    /**
     * Create an aliased <code>wecom_group_info</code> table reference
     */
    public WecomGroupInfo(Name alias) {
        this(alias, WECOM_GROUP_INFO);
    }

    /**
     * Create a <code>wecom_group_info</code> table reference
     */
    public WecomGroupInfo() {
        this(DSL.name("wecom_group_info"), null);
    }

    public <O extends Record> WecomGroupInfo(Table<O> child, ForeignKey<O, WecomGroupInfoRecord> key) {
        super(child, key, WECOM_GROUP_INFO);
    }

    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.WECOM_GROUP_INFO_IDX_TENANT_ID_SPACE_CODE_CUID_SCENE);
    }

    @Override
    public Identity<WecomGroupInfoRecord, Long> getIdentity() {
        return (Identity<WecomGroupInfoRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<WecomGroupInfoRecord> getPrimaryKey() {
        return Keys.KEY_WECOM_GROUP_INFO_PRIMARY;
    }

    @Override
    public List<UniqueKey<WecomGroupInfoRecord>> getKeys() {
        return Arrays.<UniqueKey<WecomGroupInfoRecord>>asList(Keys.KEY_WECOM_GROUP_INFO_PRIMARY, Keys.KEY_WECOM_GROUP_INFO_UK_GROUP_CODE);
    }

    @Override
    public WecomGroupInfo as(String alias) {
        return new WecomGroupInfo(DSL.name(alias), this);
    }

    @Override
    public WecomGroupInfo as(Name alias) {
        return new WecomGroupInfo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public WecomGroupInfo rename(String name) {
        return new WecomGroupInfo(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public WecomGroupInfo rename(Name name) {
        return new WecomGroupInfo(name, null);
    }

    // -------------------------------------------------------------------------
    // Row17 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row17<Long, String, String, String, String, String, String, String, String, String, Long, String, Long, String, Integer, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row17) super.fieldsRow();
    }
}
