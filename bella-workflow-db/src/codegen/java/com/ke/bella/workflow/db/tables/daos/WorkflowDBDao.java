/*
 * This file is generated by jOOQ.
 */
package com.ke.bella.workflow.db.tables.daos;


import com.ke.bella.workflow.db.tables.Workflow;
import com.ke.bella.workflow.db.tables.pojos.WorkflowDB;
import com.ke.bella.workflow.db.tables.records.WorkflowRecord;

import java.time.LocalDateTime;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WorkflowDBDao extends DAOImpl<WorkflowRecord, WorkflowDB, Long> {

    /**
     * Create a new WorkflowDBDao without any configuration
     */
    public WorkflowDBDao() {
        super(Workflow.WORKFLOW, WorkflowDB.class);
    }

    /**
     * Create a new WorkflowDBDao with an attached configuration
     */
    public WorkflowDBDao(Configuration configuration) {
        super(Workflow.WORKFLOW, WorkflowDB.class, configuration);
    }

    @Override
    public Long getId(WorkflowDB object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<WorkflowDB> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Workflow.WORKFLOW.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<WorkflowDB> fetchById(Long... values) {
        return fetch(Workflow.WORKFLOW.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public WorkflowDB fetchOneById(Long value) {
        return fetchOne(Workflow.WORKFLOW.ID, value);
    }

    /**
     * Fetch records that have <code>tenant_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<WorkflowDB> fetchRangeOfTenantId(String lowerInclusive, String upperInclusive) {
        return fetchRange(Workflow.WORKFLOW.TENANT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tenant_id IN (values)</code>
     */
    public List<WorkflowDB> fetchByTenantId(String... values) {
        return fetch(Workflow.WORKFLOW.TENANT_ID, values);
    }

    /**
     * Fetch records that have <code>workflow_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<WorkflowDB> fetchRangeOfWorkflowId(String lowerInclusive, String upperInclusive) {
        return fetchRange(Workflow.WORKFLOW.WORKFLOW_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>workflow_id IN (values)</code>
     */
    public List<WorkflowDB> fetchByWorkflowId(String... values) {
        return fetch(Workflow.WORKFLOW.WORKFLOW_ID, values);
    }

    /**
     * Fetch records that have <code>graph BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<WorkflowDB> fetchRangeOfGraph(String lowerInclusive, String upperInclusive) {
        return fetchRange(Workflow.WORKFLOW.GRAPH, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>graph IN (values)</code>
     */
    public List<WorkflowDB> fetchByGraph(String... values) {
        return fetch(Workflow.WORKFLOW.GRAPH, values);
    }

    /**
     * Fetch records that have <code>version BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<WorkflowDB> fetchRangeOfVersion(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Workflow.WORKFLOW.VERSION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>version IN (values)</code>
     */
    public List<WorkflowDB> fetchByVersion(Long... values) {
        return fetch(Workflow.WORKFLOW.VERSION, values);
    }

    /**
     * Fetch records that have <code>cuid BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<WorkflowDB> fetchRangeOfCuid(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Workflow.WORKFLOW.CUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>cuid IN (values)</code>
     */
    public List<WorkflowDB> fetchByCuid(Long... values) {
        return fetch(Workflow.WORKFLOW.CUID, values);
    }

    /**
     * Fetch records that have <code>cu_name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<WorkflowDB> fetchRangeOfCuName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Workflow.WORKFLOW.CU_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>cu_name IN (values)</code>
     */
    public List<WorkflowDB> fetchByCuName(String... values) {
        return fetch(Workflow.WORKFLOW.CU_NAME, values);
    }

    /**
     * Fetch records that have <code>ctime BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<WorkflowDB> fetchRangeOfCtime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Workflow.WORKFLOW.CTIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ctime IN (values)</code>
     */
    public List<WorkflowDB> fetchByCtime(LocalDateTime... values) {
        return fetch(Workflow.WORKFLOW.CTIME, values);
    }

    /**
     * Fetch records that have <code>muid BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<WorkflowDB> fetchRangeOfMuid(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Workflow.WORKFLOW.MUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>muid IN (values)</code>
     */
    public List<WorkflowDB> fetchByMuid(Long... values) {
        return fetch(Workflow.WORKFLOW.MUID, values);
    }

    /**
     * Fetch records that have <code>mu_name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<WorkflowDB> fetchRangeOfMuName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Workflow.WORKFLOW.MU_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>mu_name IN (values)</code>
     */
    public List<WorkflowDB> fetchByMuName(String... values) {
        return fetch(Workflow.WORKFLOW.MU_NAME, values);
    }

    /**
     * Fetch records that have <code>mtime BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<WorkflowDB> fetchRangeOfMtime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Workflow.WORKFLOW.MTIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>mtime IN (values)</code>
     */
    public List<WorkflowDB> fetchByMtime(LocalDateTime... values) {
        return fetch(Workflow.WORKFLOW.MTIME, values);
    }
}
