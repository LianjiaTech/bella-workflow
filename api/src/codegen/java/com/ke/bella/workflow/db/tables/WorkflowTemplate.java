/*
 * This file is generated by jOOQ.
 */
package com.ke.bella.workflow.db.tables;


import com.ke.bella.workflow.db.DefaultSchema;
import com.ke.bella.workflow.db.Keys;
import com.ke.bella.workflow.db.tables.records.WorkflowTemplateRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row18;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WorkflowTemplate extends TableImpl<WorkflowTemplateRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>workflow_template</code>
     */
    public static final WorkflowTemplate WORKFLOW_TEMPLATE = new WorkflowTemplate();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<WorkflowTemplateRecord> getRecordType() {
        return WorkflowTemplateRecord.class;
    }

    /**
     * The column <code>workflow_template.id</code>.
     */
    public final TableField<WorkflowTemplateRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>workflow_template.tenant_id</code>. 租户id
     */
    public final TableField<WorkflowTemplateRecord, String> TENANT_ID = createField(DSL.name("tenant_id"), SQLDataType.VARCHAR(64).nullable(false), this, "租户id");

    /**
     * The column <code>workflow_template.space_code</code>.
     */
    public final TableField<WorkflowTemplateRecord, String> SPACE_CODE = createField(DSL.name("space_code"), SQLDataType.VARCHAR(64).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>workflow_template.template_id</code>.
     */
    public final TableField<WorkflowTemplateRecord, String> TEMPLATE_ID = createField(DSL.name("template_id"), SQLDataType.VARCHAR(128).nullable(false), this, "");

    /**
     * The column <code>workflow_template.workflow_id</code>.
     */
    public final TableField<WorkflowTemplateRecord, String> WORKFLOW_ID = createField(DSL.name("workflow_id"), SQLDataType.VARCHAR(128).nullable(false), this, "");

    /**
     * The column <code>workflow_template.version</code>.
     */
    public final TableField<WorkflowTemplateRecord, Long> VERSION = createField(DSL.name("version"), SQLDataType.BIGINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>workflow_template.title</code>.
     */
    public final TableField<WorkflowTemplateRecord, String> TITLE = createField(DSL.name("title"), SQLDataType.VARCHAR(255).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>workflow_template.mode</code>.
     */
    public final TableField<WorkflowTemplateRecord, String> MODE = createField(DSL.name("mode"), SQLDataType.VARCHAR(64).nullable(false).defaultValue(DSL.inline("workflow", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>workflow_template.desc</code>.
     */
    public final TableField<WorkflowTemplateRecord, String> DESC = createField(DSL.name("desc"), SQLDataType.VARCHAR(1024).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>workflow_template.tags</code>. 标签
     */
    public final TableField<WorkflowTemplateRecord, String> TAGS = createField(DSL.name("tags"), SQLDataType.CLOB.nullable(false), this, "标签");

    /**
     * The column <code>workflow_template.status</code>.
     */
    public final TableField<WorkflowTemplateRecord, Integer> STATUS = createField(DSL.name("status"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>workflow_template.copies</code>. 复制次数
     */
    public final TableField<WorkflowTemplateRecord, Long> COPIES = createField(DSL.name("copies"), SQLDataType.BIGINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.BIGINT)), this, "复制次数");

    /**
     * The column <code>workflow_template.cuid</code>.
     */
    public final TableField<WorkflowTemplateRecord, Long> CUID = createField(DSL.name("cuid"), SQLDataType.BIGINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>workflow_template.cu_name</code>.
     */
    public final TableField<WorkflowTemplateRecord, String> CU_NAME = createField(DSL.name("cu_name"), SQLDataType.VARCHAR(32).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>workflow_template.ctime</code>.
     */
    public final TableField<WorkflowTemplateRecord, LocalDateTime> CTIME = createField(DSL.name("ctime"), SQLDataType.LOCALDATETIME(0).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>workflow_template.muid</code>.
     */
    public final TableField<WorkflowTemplateRecord, Long> MUID = createField(DSL.name("muid"), SQLDataType.BIGINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>workflow_template.mu_name</code>.
     */
    public final TableField<WorkflowTemplateRecord, String> MU_NAME = createField(DSL.name("mu_name"), SQLDataType.VARCHAR(32).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>workflow_template.mtime</code>.
     */
    public final TableField<WorkflowTemplateRecord, LocalDateTime> MTIME = createField(DSL.name("mtime"), SQLDataType.LOCALDATETIME(0).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "");

    private WorkflowTemplate(Name alias, Table<WorkflowTemplateRecord> aliased) {
        this(alias, aliased, null);
    }

    private WorkflowTemplate(Name alias, Table<WorkflowTemplateRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>workflow_template</code> table reference
     */
    public WorkflowTemplate(String alias) {
        this(DSL.name(alias), WORKFLOW_TEMPLATE);
    }

    /**
     * Create an aliased <code>workflow_template</code> table reference
     */
    public WorkflowTemplate(Name alias) {
        this(alias, WORKFLOW_TEMPLATE);
    }

    /**
     * Create a <code>workflow_template</code> table reference
     */
    public WorkflowTemplate() {
        this(DSL.name("workflow_template"), null);
    }

    public <O extends Record> WorkflowTemplate(Table<O> child, ForeignKey<O, WorkflowTemplateRecord> key) {
        super(child, key, WORKFLOW_TEMPLATE);
    }

    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    @Override
    public Identity<WorkflowTemplateRecord, Long> getIdentity() {
        return (Identity<WorkflowTemplateRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<WorkflowTemplateRecord> getPrimaryKey() {
        return Keys.KEY_WORKFLOW_TEMPLATE_PRIMARY;
    }

    @Override
    public List<UniqueKey<WorkflowTemplateRecord>> getKeys() {
        return Arrays.<UniqueKey<WorkflowTemplateRecord>>asList(Keys.KEY_WORKFLOW_TEMPLATE_PRIMARY, Keys.KEY_WORKFLOW_TEMPLATE_IDX_TENANT_ID_SPACE_CODE_TEMPLATE_ID);
    }

    @Override
    public WorkflowTemplate as(String alias) {
        return new WorkflowTemplate(DSL.name(alias), this);
    }

    @Override
    public WorkflowTemplate as(Name alias) {
        return new WorkflowTemplate(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public WorkflowTemplate rename(String name) {
        return new WorkflowTemplate(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public WorkflowTemplate rename(Name name) {
        return new WorkflowTemplate(name, null);
    }

    // -------------------------------------------------------------------------
    // Row18 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row18<Long, String, String, String, String, Long, String, String, String, String, Integer, Long, Long, String, LocalDateTime, Long, String, LocalDateTime> fieldsRow() {
        return (Row18) super.fieldsRow();
    }
}
