/*
 * This file is generated by jOOQ.
 */
package com.ke.bella.workflow.db.tables;


import com.ke.bella.workflow.db.DefaultSchema;
import com.ke.bella.workflow.db.Indexes;
import com.ke.bella.workflow.db.Keys;
import com.ke.bella.workflow.db.tables.records.WorkflowAsApiRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row17;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WorkflowAsApi extends TableImpl<WorkflowAsApiRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>workflow_as_api</code>
     */
    public static final WorkflowAsApi WORKFLOW_AS_API = new WorkflowAsApi();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<WorkflowAsApiRecord> getRecordType() {
        return WorkflowAsApiRecord.class;
    }

    /**
     * The column <code>workflow_as_api.id</code>. workflow配置自增主键
     */
    public final TableField<WorkflowAsApiRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "workflow配置自增主键");

    /**
     * The column <code>workflow_as_api.host</code>. 绑定的域名
     */
    public final TableField<WorkflowAsApiRecord, String> HOST = createField(DSL.name("host"), SQLDataType.VARCHAR(255).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "绑定的域名");

    /**
     * The column <code>workflow_as_api.path</code>. 绑定的api路径
     */
    public final TableField<WorkflowAsApiRecord, String> PATH = createField(DSL.name("path"), SQLDataType.VARCHAR(1024).nullable(false), this, "绑定的api路径");

    /**
     * The column <code>workflow_as_api.hash</code>. host+path的hash
     */
    public final TableField<WorkflowAsApiRecord, String> HASH = createField(DSL.name("hash"), SQLDataType.VARCHAR(128).nullable(false), this, "host+path的hash");

    /**
     * The column <code>workflow_as_api.operation_id</code>. 生成openapi schema的时候使用的operationId
     */
    public final TableField<WorkflowAsApiRecord, String> OPERATION_ID = createField(DSL.name("operation_id"), SQLDataType.VARCHAR(255).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "生成openapi schema的时候使用的operationId");

    /**
     * The column <code>workflow_as_api.tenant_id</code>. 租户id
     */
    public final TableField<WorkflowAsApiRecord, String> TENANT_ID = createField(DSL.name("tenant_id"), SQLDataType.VARCHAR(64).nullable(false), this, "租户id");

    /**
     * The column <code>workflow_as_api.workflow_id</code>. 工作流id
     */
    public final TableField<WorkflowAsApiRecord, String> WORKFLOW_ID = createField(DSL.name("workflow_id"), SQLDataType.VARCHAR(128).nullable(false), this, "工作流id");

    /**
     * The column <code>workflow_as_api.summary</code>.
     */
    public final TableField<WorkflowAsApiRecord, String> SUMMARY = createField(DSL.name("summary"), SQLDataType.VARCHAR(255).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>workflow_as_api.desc</code>.
     */
    public final TableField<WorkflowAsApiRecord, String> DESC = createField(DSL.name("desc"), SQLDataType.VARCHAR(1024).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>workflow_as_api.version</code>. 工作流版本，0: draft, &gt;0 正式版时间戳
     */
    public final TableField<WorkflowAsApiRecord, Long> VERSION = createField(DSL.name("version"), SQLDataType.BIGINT.nullable(false).defaultValue(DSL.inline("-1", SQLDataType.BIGINT)), this, "工作流版本，0: draft, >0 正式版时间戳");

    /**
     * The column <code>workflow_as_api.status</code>.
     */
    public final TableField<WorkflowAsApiRecord, Integer> STATUS = createField(DSL.name("status"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>workflow_as_api.cuid</code>.
     */
    public final TableField<WorkflowAsApiRecord, Long> CUID = createField(DSL.name("cuid"), SQLDataType.BIGINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>workflow_as_api.cu_name</code>.
     */
    public final TableField<WorkflowAsApiRecord, String> CU_NAME = createField(DSL.name("cu_name"), SQLDataType.VARCHAR(32).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>workflow_as_api.ctime</code>.
     */
    public final TableField<WorkflowAsApiRecord, LocalDateTime> CTIME = createField(DSL.name("ctime"), SQLDataType.LOCALDATETIME(0).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>workflow_as_api.muid</code>.
     */
    public final TableField<WorkflowAsApiRecord, Long> MUID = createField(DSL.name("muid"), SQLDataType.BIGINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>workflow_as_api.mu_name</code>.
     */
    public final TableField<WorkflowAsApiRecord, String> MU_NAME = createField(DSL.name("mu_name"), SQLDataType.VARCHAR(32).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>workflow_as_api.mtime</code>.
     */
    public final TableField<WorkflowAsApiRecord, LocalDateTime> MTIME = createField(DSL.name("mtime"), SQLDataType.LOCALDATETIME(0).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "");

    private WorkflowAsApi(Name alias, Table<WorkflowAsApiRecord> aliased) {
        this(alias, aliased, null);
    }

    private WorkflowAsApi(Name alias, Table<WorkflowAsApiRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>workflow_as_api</code> table reference
     */
    public WorkflowAsApi(String alias) {
        this(DSL.name(alias), WORKFLOW_AS_API);
    }

    /**
     * Create an aliased <code>workflow_as_api</code> table reference
     */
    public WorkflowAsApi(Name alias) {
        this(alias, WORKFLOW_AS_API);
    }

    /**
     * Create a <code>workflow_as_api</code> table reference
     */
    public WorkflowAsApi() {
        this(DSL.name("workflow_as_api"), null);
    }

    public <O extends Record> WorkflowAsApi(Table<O> child, ForeignKey<O, WorkflowAsApiRecord> key) {
        super(child, key, WORKFLOW_AS_API);
    }

    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.WORKFLOW_AS_API_IDX_HOST, Indexes.WORKFLOW_AS_API_IDX_WFID);
    }

    @Override
    public Identity<WorkflowAsApiRecord, Long> getIdentity() {
        return (Identity<WorkflowAsApiRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<WorkflowAsApiRecord> getPrimaryKey() {
        return Keys.KEY_WORKFLOW_AS_API_PRIMARY;
    }

    @Override
    public List<UniqueKey<WorkflowAsApiRecord>> getKeys() {
        return Arrays.<UniqueKey<WorkflowAsApiRecord>>asList(Keys.KEY_WORKFLOW_AS_API_PRIMARY, Keys.KEY_WORKFLOW_AS_API_IDX_HOST_PATH);
    }

    @Override
    public WorkflowAsApi as(String alias) {
        return new WorkflowAsApi(DSL.name(alias), this);
    }

    @Override
    public WorkflowAsApi as(Name alias) {
        return new WorkflowAsApi(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public WorkflowAsApi rename(String name) {
        return new WorkflowAsApi(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public WorkflowAsApi rename(Name name) {
        return new WorkflowAsApi(name, null);
    }

    // -------------------------------------------------------------------------
    // Row17 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row17<Long, String, String, String, String, String, String, String, String, Long, Integer, Long, String, LocalDateTime, Long, String, LocalDateTime> fieldsRow() {
        return (Row17) super.fieldsRow();
    }
}
