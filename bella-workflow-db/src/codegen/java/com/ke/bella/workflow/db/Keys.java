/*
 * This file is generated by jOOQ.
 */
package com.ke.bella.workflow.db;


import com.ke.bella.workflow.db.tables.Instance;
import com.ke.bella.workflow.db.tables.Tenant;
import com.ke.bella.workflow.db.tables.Workflow;
import com.ke.bella.workflow.db.tables.WorkflowNodeRun;
import com.ke.bella.workflow.db.tables.WorkflowRun;
import com.ke.bella.workflow.db.tables.WorkflowRunSharding;
import com.ke.bella.workflow.db.tables.records.InstanceRecord;
import com.ke.bella.workflow.db.tables.records.TenantRecord;
import com.ke.bella.workflow.db.tables.records.WorkflowNodeRunRecord;
import com.ke.bella.workflow.db.tables.records.WorkflowRecord;
import com.ke.bella.workflow.db.tables.records.WorkflowRunRecord;
import com.ke.bella.workflow.db.tables.records.WorkflowRunShardingRecord;

import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in 
 * the default schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<InstanceRecord> KEY_INSTANCE_PRIMARY = Internal.createUniqueKey(Instance.INSTANCE, DSL.name("KEY_instance_PRIMARY"), new TableField[] { Instance.INSTANCE.ID }, true);
    public static final UniqueKey<TenantRecord> KEY_TENANT_IDX_TENANT_ID = Internal.createUniqueKey(Tenant.TENANT, DSL.name("KEY_tenant_idx_tenant_id"), new TableField[] { Tenant.TENANT.TENANT_ID }, true);
    public static final UniqueKey<TenantRecord> KEY_TENANT_PRIMARY = Internal.createUniqueKey(Tenant.TENANT, DSL.name("KEY_tenant_PRIMARY"), new TableField[] { Tenant.TENANT.ID }, true);
    public static final UniqueKey<WorkflowRecord> KEY_WORKFLOW_IDX_TENANT_ID = Internal.createUniqueKey(Workflow.WORKFLOW, DSL.name("KEY_workflow_idx_tenant_id"), new TableField[] { Workflow.WORKFLOW.TENANT_ID, Workflow.WORKFLOW.WORKFLOW_ID, Workflow.WORKFLOW.VERSION }, true);
    public static final UniqueKey<WorkflowRecord> KEY_WORKFLOW_PRIMARY = Internal.createUniqueKey(Workflow.WORKFLOW, DSL.name("KEY_workflow_PRIMARY"), new TableField[] { Workflow.WORKFLOW.ID }, true);
    public static final UniqueKey<WorkflowNodeRunRecord> KEY_WORKFLOW_NODE_RUN_PRIMARY = Internal.createUniqueKey(WorkflowNodeRun.WORKFLOW_NODE_RUN, DSL.name("KEY_workflow_node_run_PRIMARY"), new TableField[] { WorkflowNodeRun.WORKFLOW_NODE_RUN.ID }, true);
    public static final UniqueKey<WorkflowRunRecord> KEY_WORKFLOW_RUN_IDX_WORKFLOW_RUN_ID = Internal.createUniqueKey(WorkflowRun.WORKFLOW_RUN, DSL.name("KEY_workflow_run_idx_workflow_run_id"), new TableField[] { WorkflowRun.WORKFLOW_RUN.WORKFLOW_RUN_ID }, true);
    public static final UniqueKey<WorkflowRunRecord> KEY_WORKFLOW_RUN_PRIMARY = Internal.createUniqueKey(WorkflowRun.WORKFLOW_RUN, DSL.name("KEY_workflow_run_PRIMARY"), new TableField[] { WorkflowRun.WORKFLOW_RUN.ID }, true);
    public static final UniqueKey<WorkflowRunShardingRecord> KEY_WORKFLOW_RUN_SHARDING_IDX_KEY = Internal.createUniqueKey(WorkflowRunSharding.WORKFLOW_RUN_SHARDING, DSL.name("KEY_workflow_run_sharding_idx_key"), new TableField[] { WorkflowRunSharding.WORKFLOW_RUN_SHARDING.KEY }, true);
    public static final UniqueKey<WorkflowRunShardingRecord> KEY_WORKFLOW_RUN_SHARDING_PRIMARY = Internal.createUniqueKey(WorkflowRunSharding.WORKFLOW_RUN_SHARDING, DSL.name("KEY_workflow_run_sharding_PRIMARY"), new TableField[] { WorkflowRunSharding.WORKFLOW_RUN_SHARDING.ID }, true);
}
