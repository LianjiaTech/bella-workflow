/*
 * This file is generated by jOOQ.
 */
package com.ke.bella.workflow.db.tables.records;


import com.ke.bella.workflow.db.repo.Operator;
import com.ke.bella.workflow.db.tables.WorkflowRun;

import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WorkflowRunRecord extends UpdatableRecordImpl<WorkflowRunRecord> implements Operator {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>workflow_run.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>workflow_run.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>workflow_run.tenant_id</code>.
     */
    public void setTenantId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>workflow_run.tenant_id</code>.
     */
    public String getTenantId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>workflow_run.workflow_id</code>.
     */
    public void setWorkflowId(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>workflow_run.workflow_id</code>.
     */
    public String getWorkflowId() {
        return (String) get(2);
    }

    /**
     * Setter for <code>workflow_run.workflow_version</code>.
     */
    public void setWorkflowVersion(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>workflow_run.workflow_version</code>.
     */
    public Long getWorkflowVersion() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>workflow_run.workflow_run_id</code>.
     */
    public void setWorkflowRunId(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>workflow_run.workflow_run_id</code>.
     */
    public String getWorkflowRunId() {
        return (String) get(4);
    }

    /**
     * Setter for <code>workflow_run.workflow_run_sharding_key</code>.
     */
    public void setWorkflowRunShardingKey(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>workflow_run.workflow_run_sharding_key</code>.
     */
    public String getWorkflowRunShardingKey() {
        return (String) get(5);
    }

    /**
     * Setter for <code>workflow_run.trigger_from</code>. 工作流触发来源：
DEBUG
DEBUG_NODE
API


     */
    public void setTriggerFrom(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>workflow_run.trigger_from</code>. 工作流触发来源：
DEBUG
DEBUG_NODE
API


     */
    public String getTriggerFrom() {
        return (String) get(6);
    }

    /**
     * Setter for <code>workflow_run.query</code>.
     */
    public void setQuery(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>workflow_run.query</code>.
     */
    public String getQuery() {
        return (String) get(7);
    }

    /**
     * Setter for <code>workflow_run.files</code>.
     */
    public void setFiles(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>workflow_run.files</code>.
     */
    public String getFiles() {
        return (String) get(8);
    }

    /**
     * Setter for <code>workflow_run.inputs</code>.
     */
    public void setInputs(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>workflow_run.inputs</code>.
     */
    public String getInputs() {
        return (String) get(9);
    }

    /**
     * Setter for <code>workflow_run.outputs</code>. 最后一个节点的输出
     */
    public void setOutputs(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>workflow_run.outputs</code>. 最后一个节点的输出
     */
    public String getOutputs() {
        return (String) get(10);
    }

    /**
     * Setter for <code>workflow_run.status</code>.     
    INIT=‘init’
    RUNNING = 'running'
    SUCCEEDED = 'succeeded'
    FAILED = 'failed'
    STOPPED = 'stopped'

     */
    public void setStatus(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>workflow_run.status</code>.     
    INIT=‘init’
    RUNNING = 'running'
    SUCCEEDED = 'succeeded'
    FAILED = 'failed'
    STOPPED = 'stopped'

     */
    public String getStatus() {
        return (String) get(11);
    }

    /**
     * Setter for <code>workflow_run.error</code>.
     */
    public void setError(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>workflow_run.error</code>.
     */
    public String getError() {
        return (String) get(12);
    }

    /**
     * Setter for <code>workflow_run.callback_url</code>.
     */
    public void setCallbackUrl(String value) {
        set(13, value);
    }

    /**
     * Getter for <code>workflow_run.callback_url</code>.
     */
    public String getCallbackUrl() {
        return (String) get(13);
    }

    /**
     * Setter for <code>workflow_run.callback_status</code>.
     */
    public void setCallbackStatus(Integer value) {
        set(14, value);
    }

    /**
     * Getter for <code>workflow_run.callback_status</code>.
     */
    public Integer getCallbackStatus() {
        return (Integer) get(14);
    }

    /**
     * Setter for <code>workflow_run.workflow_scheduling_id</code>.
     */
    public void setWorkflowSchedulingId(String value) {
        set(15, value);
    }

    /**
     * Getter for <code>workflow_run.workflow_scheduling_id</code>.
     */
    public String getWorkflowSchedulingId() {
        return (String) get(15);
    }

    /**
     * Setter for <code>workflow_run.response_mode</code>.
     */
    public void setResponseMode(String value) {
        set(16, value);
    }

    /**
     * Getter for <code>workflow_run.response_mode</code>.
     */
    public String getResponseMode() {
        return (String) get(16);
    }

    /**
     * Setter for <code>workflow_run.trace_id</code>.
     */
    public void setTraceId(String value) {
        set(17, value);
    }

    /**
     * Getter for <code>workflow_run.trace_id</code>.
     */
    public String getTraceId() {
        return (String) get(17);
    }

    /**
     * Setter for <code>workflow_run.span_lev</code>.
     */
    public void setSpanLev(Integer value) {
        set(18, value);
    }

    /**
     * Getter for <code>workflow_run.span_lev</code>.
     */
    public Integer getSpanLev() {
        return (Integer) get(18);
    }

    /**
     * Setter for <code>workflow_run.cuid</code>.
     */
    public void setCuid(Long value) {
        set(19, value);
    }

    /**
     * Getter for <code>workflow_run.cuid</code>.
     */
    public Long getCuid() {
        return (Long) get(19);
    }

    /**
     * Setter for <code>workflow_run.cu_name</code>.
     */
    public void setCuName(String value) {
        set(20, value);
    }

    /**
     * Getter for <code>workflow_run.cu_name</code>.
     */
    public String getCuName() {
        return (String) get(20);
    }

    /**
     * Setter for <code>workflow_run.ctime</code>.
     */
    public void setCtime(LocalDateTime value) {
        set(21, value);
    }

    /**
     * Getter for <code>workflow_run.ctime</code>.
     */
    public LocalDateTime getCtime() {
        return (LocalDateTime) get(21);
    }

    /**
     * Setter for <code>workflow_run.muid</code>.
     */
    public void setMuid(Long value) {
        set(22, value);
    }

    /**
     * Getter for <code>workflow_run.muid</code>.
     */
    public Long getMuid() {
        return (Long) get(22);
    }

    /**
     * Setter for <code>workflow_run.mu_name</code>.
     */
    public void setMuName(String value) {
        set(23, value);
    }

    /**
     * Getter for <code>workflow_run.mu_name</code>.
     */
    public String getMuName() {
        return (String) get(23);
    }

    /**
     * Setter for <code>workflow_run.mtime</code>.
     */
    public void setMtime(LocalDateTime value) {
        set(24, value);
    }

    /**
     * Getter for <code>workflow_run.mtime</code>.
     */
    public LocalDateTime getMtime() {
        return (LocalDateTime) get(24);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached WorkflowRunRecord
     */
    public WorkflowRunRecord() {
        super(WorkflowRun.WORKFLOW_RUN);
    }

    /**
     * Create a detached, initialised WorkflowRunRecord
     */
    public WorkflowRunRecord(Long id, String tenantId, String workflowId, Long workflowVersion, String workflowRunId, String workflowRunShardingKey, String triggerFrom, String query, String files, String inputs, String outputs, String status, String error, String callbackUrl, Integer callbackStatus, String workflowSchedulingId, String responseMode, String traceId, Integer spanLev, Long cuid, String cuName, LocalDateTime ctime, Long muid, String muName, LocalDateTime mtime) {
        super(WorkflowRun.WORKFLOW_RUN);

        setId(id);
        setTenantId(tenantId);
        setWorkflowId(workflowId);
        setWorkflowVersion(workflowVersion);
        setWorkflowRunId(workflowRunId);
        setWorkflowRunShardingKey(workflowRunShardingKey);
        setTriggerFrom(triggerFrom);
        setQuery(query);
        setFiles(files);
        setInputs(inputs);
        setOutputs(outputs);
        setStatus(status);
        setError(error);
        setCallbackUrl(callbackUrl);
        setCallbackStatus(callbackStatus);
        setWorkflowSchedulingId(workflowSchedulingId);
        setResponseMode(responseMode);
        setTraceId(traceId);
        setSpanLev(spanLev);
        setCuid(cuid);
        setCuName(cuName);
        setCtime(ctime);
        setMuid(muid);
        setMuName(muName);
        setMtime(mtime);
    }
}
